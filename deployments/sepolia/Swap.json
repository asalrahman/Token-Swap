{
  "address": "0x58725535508ca9a60a906e2BC6128B07b77B1F02",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "_swapRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTier",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swapWETHForDAI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x95a271339eef7563bfa051838857ce795d0b732415ddd8a1d8e0584f26fe21a0",
  "receipt": {
    "to": null,
    "from": "0x283Cd3fC81C9a7e08363FB5E50084ABB8B75a6ed",
    "contractAddress": "0x58725535508ca9a60a906e2BC6128B07b77B1F02",
    "transactionIndex": 39,
    "gasUsed": "658172",
    "logsBloom": "0x
    "blockHash": "0xc85104523145c0a5e445a40875db822cb02911189b09c4019391a3118f84a8a5",
    "transactionHash": "0x95a271339eef7563bfa051838857ce795d0b732415ddd8a1d8e0584f26fe21a0",
    "logs": [],
    "blockNumber": 4176053,
    "cumulativeGasUsed": "6095224",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1234567890abcdef1234567890abcdef12345678"
  ],
  "numDeployments": 1,
  "solcInputHash": "bdc8886931c872b3395e00730fb62194",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTier\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapWETHForDAI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Swap.sol\":\"Swap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/Swap.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\\r\\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\\r\\n\\r\\ncontract Swap {\\r\\n\\r\\n ISwapRouter public immutable swapRouter;\\r\\n\\r\\n address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\\r\\n address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n   uint24 public constant feeTier = 3000;\\r\\n    \\r\\n    constructor(ISwapRouter _swapRouter) {\\r\\n        swapRouter = _swapRouter;\\r\\n    }\\r\\n    \\r\\n    function swapWETHForDAI(uint256 amountIn) external returns (uint256 amountOut) {\\r\\n\\r\\n        // Transfer the specified amount of WETH9 to this contract.\\r\\n        TransferHelper.safeTransferFrom(WETH9, msg.sender, address(this), amountIn);\\r\\n        // Approve the router to spend WETH9.\\r\\n        TransferHelper.safeApprove(WETH9, address(swapRouter), amountIn);\\r\\n        // Note: To use this example, you should explicitly set slippage limits, omitting for simplicity\\r\\n        uint256 minOut = /* Calculate min output */ 0;\\r\\n        uint160 priceLimit = /* Calculate price limit */ 0;\\r\\n        // Create the params that will be used to execute the swap\\r\\n        ISwapRouter.ExactInputSingleParams memory params =\\r\\n            ISwapRouter.ExactInputSingleParams({\\r\\n                tokenIn: WETH9,\\r\\n                tokenOut: DAI,\\r\\n                fee: feeTier,\\r\\n                recipient: msg.sender,\\r\\n                deadline: block.timestamp,\\r\\n                amountIn: amountIn,\\r\\n                amountOutMinimum: minOut,\\r\\n                sqrtPriceLimitX96: priceLimit\\r\\n            });\\r\\n        // The call to `exactInputSingle` executes the swap.\\r\\n        amountOut = swapRouter.exactInputSingle(params);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x6f16079291c098d4dc941bfd92f6076e77cbadf95f8c23bfe14c095043d03452\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610c1a380380610c1a83398181016040528101906100329190610084565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610108565b60008151905061007e816100f1565b92915050565b60006020828403121561009657600080fd5b60006100a48482850161006f565b91505092915050565b60006100b8826100d1565b9050919050565b60006100ca826100ad565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100fa816100bf565b811461010557600080fd5b50565b60805160601c610ae6610134600039600081816101400152818161022f01526103020152610ae66000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632ed5016f1461005c5780634aa4a4fc1461008c57806372f5d98a146100aa578063c31c9c07146100c8578063e0bab4c4146100e6575b600080fd5b61007660048036038101906100719190610651565b610104565b6040516100839190610992565b60405180910390f35b6100946102e2565b6040516100a19190610885565b60405180910390f35b6100b26102fa565b6040516100bf9190610977565b60405180910390f35b6100d0610300565b6040516100dd9190610900565b60405180910390f35b6100ee610324565b6040516100fb9190610885565b60405180910390f35b600061012673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc233308561033c565b61016573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc27f000000000000000000000000000000000000000000000000000000000000000084610494565b600080600060405180610100016040528073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b8152600401610286919061095b565b602060405180830381600087803b1580156102a057600080fd5b505af11580156102b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d8919061067a565b9350505050919050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b610bb881565b7f000000000000000000000000000000000000000000000000000000000000000081565b736b175474e89094c44da98b954eedeac495271d0f81565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401610373939291906108a0565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103dd919061086e565b6000604051808303816000865af19150503d806000811461041a576040519150601f19603f3d011682016040523d82523d6000602084013e61041f565b606091505b509150915081801561044d575060008151148061044c57508080602001905181019061044b9190610628565b5b5b61048c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104839061093b565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016104c99291906108d7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610533919061086e565b6000604051808303816000865af19150503d8060008114610570576040519150601f19603f3d011682016040523d82523d6000602084013e610575565b606091505b50915091508180156105a357506000815114806105a25750808060200190518101906105a19190610628565b5b5b6105e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d99061091b565b60405180910390fd5b5050505050565b6000815190506105f881610a82565b92915050565b60008135905061060d81610a99565b92915050565b60008151905061062281610a99565b92915050565b60006020828403121561063a57600080fd5b6000610648848285016105e9565b91505092915050565b60006020828403121561066357600080fd5b6000610671848285016105fe565b91505092915050565b60006020828403121561068c57600080fd5b600061069a84828501610613565b91505092915050565b6106ac816109d4565b82525050565b6106bb816109d4565b82525050565b60006106cc826109ad565b6106d681856109b8565b93506106e6818560208601610a4f565b80840191505092915050565b6106fb81610a2b565b82525050565b600061070e6002836109c3565b91507f53410000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b600061074e6003836109c3565b91507f53544600000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6101008201600082015161079860008501826106a3565b5060208201516107ab60208501826106a3565b5060408201516107be6040850182610832565b5060608201516107d160608501826106a3565b5060808201516107e46080850182610850565b5060a08201516107f760a0850182610850565b5060c082015161080a60c0850182610850565b5060e082015161081d60e0850182610823565b50505050565b61082c816109f2565b82525050565b61083b81610a12565b82525050565b61084a81610a12565b82525050565b61085981610a21565b82525050565b61086881610a21565b82525050565b600061087a82846106c1565b915081905092915050565b600060208201905061089a60008301846106b2565b92915050565b60006060820190506108b560008301866106b2565b6108c260208301856106b2565b6108cf604083018461085f565b949350505050565b60006040820190506108ec60008301856106b2565b6108f9602083018461085f565b9392505050565b600060208201905061091560008301846106f2565b92915050565b6000602082019050818103600083015261093481610701565b9050919050565b6000602082019050818103600083015261095481610741565b9050919050565b6000610100820190506109716000830184610781565b92915050565b600060208201905061098c6000830184610841565b92915050565b60006020820190506109a7600083018461085f565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006109df826109f2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b6000610a3682610a3d565b9050919050565b6000610a48826109f2565b9050919050565b60005b83811015610a6d578082015181840152602081019050610a52565b83811115610a7c576000848401525b50505050565b610a8b816109e6565b8114610a9657600080fd5b50565b610aa281610a21565b8114610aad57600080fd5b5056fea2646970667358221220220bb79b6886ac96d19ade7f281bd013a62fcf6f2716984ccc55c95416c072c764736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80632ed5016f1461005c5780634aa4a4fc1461008c57806372f5d98a146100aa578063c31c9c07146100c8578063e0bab4c4146100e6575b600080fd5b61007660048036038101906100719190610651565b610104565b6040516100839190610992565b60405180910390f35b6100946102e2565b6040516100a19190610885565b60405180910390f35b6100b26102fa565b6040516100bf9190610977565b60405180910390f35b6100d0610300565b6040516100dd9190610900565b60405180910390f35b6100ee610324565b6040516100fb9190610885565b60405180910390f35b600061012673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc233308561033c565b61016573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc27f000000000000000000000000000000000000000000000000000000000000000084610494565b600080600060405180610100016040528073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b8152600401610286919061095b565b602060405180830381600087803b1580156102a057600080fd5b505af11580156102b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d8919061067a565b9350505050919050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b610bb881565b7f000000000000000000000000000000000000000000000000000000000000000081565b736b175474e89094c44da98b954eedeac495271d0f81565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401610373939291906108a0565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103dd919061086e565b6000604051808303816000865af19150503d806000811461041a576040519150601f19603f3d011682016040523d82523d6000602084013e61041f565b606091505b509150915081801561044d575060008151148061044c57508080602001905181019061044b9190610628565b5b5b61048c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104839061093b565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016104c99291906108d7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610533919061086e565b6000604051808303816000865af19150503d8060008114610570576040519150601f19603f3d011682016040523d82523d6000602084013e610575565b606091505b50915091508180156105a357506000815114806105a25750808060200190518101906105a19190610628565b5b5b6105e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d99061091b565b60405180910390fd5b5050505050565b6000815190506105f881610a82565b92915050565b60008135905061060d81610a99565b92915050565b60008151905061062281610a99565b92915050565b60006020828403121561063a57600080fd5b6000610648848285016105e9565b91505092915050565b60006020828403121561066357600080fd5b6000610671848285016105fe565b91505092915050565b60006020828403121561068c57600080fd5b600061069a84828501610613565b91505092915050565b6106ac816109d4565b82525050565b6106bb816109d4565b82525050565b60006106cc826109ad565b6106d681856109b8565b93506106e6818560208601610a4f565b80840191505092915050565b6106fb81610a2b565b82525050565b600061070e6002836109c3565b91507f53410000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b600061074e6003836109c3565b91507f53544600000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6101008201600082015161079860008501826106a3565b5060208201516107ab60208501826106a3565b5060408201516107be6040850182610832565b5060608201516107d160608501826106a3565b5060808201516107e46080850182610850565b5060a08201516107f760a0850182610850565b5060c082015161080a60c0850182610850565b5060e082015161081d60e0850182610823565b50505050565b61082c816109f2565b82525050565b61083b81610a12565b82525050565b61084a81610a12565b82525050565b61085981610a21565b82525050565b61086881610a21565b82525050565b600061087a82846106c1565b915081905092915050565b600060208201905061089a60008301846106b2565b92915050565b60006060820190506108b560008301866106b2565b6108c260208301856106b2565b6108cf604083018461085f565b949350505050565b60006040820190506108ec60008301856106b2565b6108f9602083018461085f565b9392505050565b600060208201905061091560008301846106f2565b92915050565b6000602082019050818103600083015261093481610701565b9050919050565b6000602082019050818103600083015261095481610741565b9050919050565b6000610100820190506109716000830184610781565b92915050565b600060208201905061098c6000830184610841565b92915050565b60006020820190506109a7600083018461085f565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006109df826109f2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b6000610a3682610a3d565b9050919050565b6000610a48826109f2565b9050919050565b60005b83811015610a6d578082015181840152602081019050610a52565b83811115610a7c576000848401525b50505050565b610a8b816109e6565b8114610a9657600080fd5b50565b610aa281610a21565b8114610aad57600080fd5b5056fea2646970667358221220220bb79b6886ac96d19ade7f281bd013a62fcf6f2716984ccc55c95416c072c764736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}